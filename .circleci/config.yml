# ----------------------------------
# Copyright (c) 2021 Prashant K. Jha
# ----------------------------------
#
# Distributed under the Boost Software License, Version 1.0. (See accompanying
# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

version: 2.1
parameters:
  dckimg:
    type: string
    default: prashjha/u1804-pd:latest

commands:
  cmakeconfig:
    parameters:
      cmakeargs:
        type: string
        default: "-DCMAKE_BUILD_TYPE=Release -DEnable_Tests=ON"
    steps:
      - run: 
        name: Configure
        command: |
          mkdir -p build 
          cd build 
          cmake << pipeline.parameters.cmakeargs >> ..


jobs:
    build:
        docker:
          - image: << pipeline.parameters.dckimg >>
        steps:
            - checkout
            - cmakeconfig:
                cmakeargs: " -DCMAKE_BUILD_TYPE=Release -DEnable_Tests=ON "
            - run:
                name: Build
                command: |  
                  cd build 
                  make -j 2
            - run:
                name: Test
                command: |
                  cd build 
                  ctest --verbose
    documentation:
      docker:
        - image: prashjha/u1804-pd:latest
      steps:
        - checkout
        - run:
            name: Configure 
            command: |
              mkdir -p build 
              cd build 
              cmake -DCMAKE_BUILD_TYPE=Release -DEnable_Documentation=ON ..
        - run:
            name: Documentaiton
            command: |
              cd build
              make doc
    deploy:
      machine:
        image: ubuntu-2004:202008-01
      environment:
        IMAGE_FOLDER_NAME: .circleci/Docker
        IMAGE_NAME: prashjha/peridem-u1804:latest
      steps:
        - checkout
        - run:
            name: Build docker
            command: |
              docker build -t ${IMAGE_NAME} ${IMAGE_FOLDER_NAME}
              docker images
        - run:
            name: Deploy to docker hub
            command: |
              if [ "${CIRCLE_BRANCH}" == "main" ]; then
                 docker login -u $DOCKER_USER -p $DOCKER_PASS
                 docker push ${IMAGE_NAME}
              fi
        - run:
            name: Deploy to github
            command: |
              if [ "${CIRCLE_BRANCH}" == "main" ]; then
                 docker login docker.pkg.github.com --username prashjha -p ${G_TOKEN}
                 docker tag ${IMAGE_NAME} docker.pkg.github.com/prashjha/peridem/peridem-u1804:latest
                 docker push docker.pkg.github.com/prashjha/peridem/peridem-u1804:latest
              fi
    codecoverage:
      docker:
        - image: prashjha/u1804-pd:latest
      steps:
        - checkout
        - run:
            name: Configure
            command: |
              mkdir -p build
              cd build
              cmake -DCMAKE_BUILD_TYPE=Release -DEnable_Tests=ON -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage -fpic" ..
              make
        - run:
            name: Tests
            command: |
              cd build
              ctest
        - run:
            name: Report
            command: |
              cd build
              gcovr --exclude-directories=build --exclude-directories=external \
                    --exclude-directories=examples --exclude-directories=tools \
                    -r ..
        - run:
            name: Publish code coverage
            command: |
              if [ "${CIRCLE_BRANCH}" == "main" ]; then
                cd build
                #coveralls --gcov-options '\-lp' -t ${CODECOV_TOKEN}
                bash <(curl -s https://codecov.io/bash) -t ${CODECOV_TOKEN}
              fi
workflows:
  version: 2
  build_doc_deploy_cov:
    jobs:
      - build:
          filters:
            branches:
              ignore: gh-pages
#       - documentation:
#           filters:
#             branches:
#               ignore: gh-pages
#           requires:
#             - build
#       - deploy:
#           filters:
#             branches:
#               ignore: gh-pages
#           requires:
#             - build
#       - codecoverage:
#           filters:
#             branches:
#               ignore: gh-pages
#           requires:
#             - build
